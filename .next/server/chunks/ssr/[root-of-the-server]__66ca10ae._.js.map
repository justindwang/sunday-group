{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/justin/github2/sunday-group/app/utils/types.ts"],"sourcesContent":["export interface Participant {\n  id: string;\n  name: string;\n  isWillingToLead: boolean;\n  groupId?: string;\n}\n\nexport interface Group {\n  id: string;\n  name: string;\n  participants: Participant[];\n  hasLeader: boolean;\n}\n\nexport const BIBLE_BOOKS = [\n  \"Genesis\", \"Exodus\", \"Leviticus\", \"Numbers\", \"Deuteronomy\",\n  \"Joshua\", \"Judges\", \"Ruth\", \"1 Samuel\", \"2 Samuel\",\n  \"1 Kings\", \"2 Kings\", \"1 Chronicles\", \"2 Chronicles\",\n  \"Ezra\", \"Nehemiah\", \"Esther\", \"Job\", \"Psalms\",\n  \"Proverbs\", \"Ecclesiastes\", \"Song of Solomon\", \"Isaiah\", \"Jeremiah\",\n  \"Lamentations\", \"Ezekiel\", \"Daniel\", \"Hosea\", \"Joel\",\n  \"Amos\", \"Obadiah\", \"Jonah\", \"Micah\", \"Nahum\",\n  \"Habakkuk\", \"Zephaniah\", \"Haggai\", \"Zechariah\", \"Malachi\",\n  \"Matthew\", \"Mark\", \"Luke\", \"John\", \"Acts\",\n  \"Romans\", \"1 Corinthians\", \"2 Corinthians\", \"Galatians\", \"Ephesians\",\n  \"Philippians\", \"Colossians\", \"1 Thessalonians\", \"2 Thessalonians\",\n  \"1 Timothy\", \"2 Timothy\", \"Titus\", \"Philemon\", \"Hebrews\",\n  \"James\", \"1 Peter\", \"2 Peter\", \"1 John\", \"2 John\",\n  \"3 John\", \"Jude\", \"Revelation\"\n];\n\nexport function getRandomBibleBook(): string {\n  return BIBLE_BOOKS[Math.floor(Math.random() * BIBLE_BOOKS.length)];\n}\n\nexport function generateUniqueId(): string {\n  return Math.random().toString(36).substring(2, 9);\n}\n"],"names":[],"mappings":";;;;;AAcO,MAAM,cAAc;IACzB;IAAW;IAAU;IAAa;IAAW;IAC7C;IAAU;IAAU;IAAQ;IAAY;IACxC;IAAW;IAAW;IAAgB;IACtC;IAAQ;IAAY;IAAU;IAAO;IACrC;IAAY;IAAgB;IAAmB;IAAU;IACzD;IAAgB;IAAW;IAAU;IAAS;IAC9C;IAAQ;IAAW;IAAS;IAAS;IACrC;IAAY;IAAa;IAAU;IAAa;IAChD;IAAW;IAAQ;IAAQ;IAAQ;IACnC;IAAU;IAAiB;IAAiB;IAAa;IACzD;IAAe;IAAc;IAAmB;IAChD;IAAa;IAAa;IAAS;IAAY;IAC/C;IAAS;IAAW;IAAW;IAAU;IACzC;IAAU;IAAQ;CACnB;AAEM,SAAS;IACd,OAAO,WAAW,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,YAAY,MAAM,EAAE;AACpE;AAEO,SAAS;IACd,OAAO,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,SAAS,CAAC,GAAG;AACjD","debugId":null}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["file:///Users/justin/github2/sunday-group/app/context/RoomContext.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { Participant, Group, generateUniqueId } from '../utils/types';\n\ninterface RoomContextType {\n  roomId: string;\n  participants: Participant[];\n  groups: Group[] | null;\n  isGroupsFormed: boolean;\n  isLoading: boolean;\n  error: string | null;\n  addParticipant: (name: string, isWillingToLead: boolean) => Promise<Participant>;\n  addParticipantManually: (name: string, isWillingToLead: boolean) => Promise<void>;\n  removeParticipant: (id: string) => Promise<void>;\n  formGroups: () => Promise<boolean>;\n  resetGroups: () => Promise<void>;\n  resetRoom: () => Promise<void>;\n}\n\nconst RoomContext = createContext<RoomContextType | undefined>(undefined);\n\nexport function RoomProvider({ children }: { children: React.ReactNode }) {\n  // Use a fixed roomId for all sessions\n  const [roomId] = useState<string>(\"sunday-group\");\n  \n  const [participants, setParticipants] = useState<Participant[]>([]);\n  const [groups, setGroups] = useState<Group[] | null>(null);\n  const [isGroupsFormed, setIsGroupsFormed] = useState<boolean>(false);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n  const [lastFetchTime, setLastFetchTime] = useState<number>(0);\n\n  // Fetch room data from the server\n  const fetchRoomData = async () => {\n    try {\n      const response = await fetch(`/api/room?roomId=${roomId}`);\n      \n      if (!response.ok) {\n        throw new Error('Failed to fetch room data');\n      }\n      \n      const data = await response.json();\n      \n      setParticipants(data.participants);\n      setGroups(data.groups);\n      setIsGroupsFormed(data.isGroupsFormed);\n      setError(null);\n    } catch (err) {\n      console.error('Error fetching room data:', err);\n      setError('Failed to connect to the server');\n    } finally {\n      setIsLoading(false);\n      setLastFetchTime(Date.now());\n    }\n  };\n\n  // Initial data fetch\n  useEffect(() => {\n    fetchRoomData();\n  }, []);\n\n  // Polling for updates every 3 seconds\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      // Only fetch if it's been more than 2 seconds since the last fetch\n      // This prevents too many requests if we're already making API calls\n      if (Date.now() - lastFetchTime > 2000) {\n        fetchRoomData();\n      }\n    }, 3000);\n    \n    return () => clearInterval(intervalId);\n  }, [lastFetchTime]);\n\n  // Add a participant who joined via the join page\n  const addParticipant = async (name: string, isWillingToLead: boolean): Promise<Participant> => {\n    try {\n      const participantId = generateUniqueId();\n      \n      const response = await fetch('/api/room', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          roomId,\n          action: 'addParticipant',\n          data: {\n            id: participantId,\n            name,\n            isWillingToLead\n          }\n        }),\n      });\n      \n      if (!response.ok) {\n        throw new Error('Failed to add participant');\n      }\n      \n      const result = await response.json();\n      \n      if (!result.success) {\n        throw new Error(result.error || 'Failed to add participant');\n      }\n      \n      setParticipants(result.participants);\n      setLastFetchTime(Date.now());\n      \n      return result.participant;\n    } catch (err) {\n      console.error('Error adding participant:', err);\n      setError('Failed to add participant');\n      throw err;\n    }\n  };\n\n  // Add a participant manually from the host page\n  const addParticipantManually = async (name: string, isWillingToLead: boolean) => {\n    await addParticipant(name, isWillingToLead);\n  };\n\n  // Remove a participant\n  const removeParticipant = async (id: string) => {\n    try {\n      const response = await fetch('/api/room', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          roomId,\n          action: 'removeParticipant',\n          data: {\n            participantId: id\n          }\n        }),\n      });\n      \n      if (!response.ok) {\n        throw new Error('Failed to remove participant');\n      }\n      \n      const result = await response.json();\n      \n      if (!result.success) {\n        throw new Error(result.error || 'Failed to remove participant');\n      }\n      \n      setParticipants(result.participants);\n      setLastFetchTime(Date.now());\n    } catch (err) {\n      console.error('Error removing participant:', err);\n      setError('Failed to remove participant');\n      throw err;\n    }\n  };\n\n  // Form groups from participants\n  const createGroups = async (): Promise<boolean> => {\n    try {\n      const response = await fetch('/api/room', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          roomId,\n          action: 'formGroups'\n        }),\n      });\n      \n      if (!response.ok) {\n        throw new Error('Failed to form groups');\n      }\n      \n      const result = await response.json();\n      \n      if (!result.success) {\n        return false; // Not enough leaders\n      }\n      \n      setGroups(result.groups);\n      setParticipants(result.participants);\n      setIsGroupsFormed(result.isGroupsFormed);\n      setLastFetchTime(Date.now());\n      \n      return true;\n    } catch (err) {\n      console.error('Error forming groups:', err);\n      setError('Failed to form groups');\n      return false;\n    }\n  };\n\n  // Reset groups without clearing participants\n  const resetGroups = async () => {\n    try {\n      const response = await fetch('/api/room', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          roomId,\n          action: 'resetGroups'\n        }),\n      });\n      \n      if (!response.ok) {\n        throw new Error('Failed to reset groups');\n      }\n      \n      const result = await response.json();\n      \n      if (!result.success) {\n        throw new Error(result.error || 'Failed to reset groups');\n      }\n      \n      setGroups(result.groups);\n      setParticipants(result.participants);\n      setIsGroupsFormed(result.isGroupsFormed);\n      setLastFetchTime(Date.now());\n    } catch (err) {\n      console.error('Error resetting groups:', err);\n      setError('Failed to reset groups');\n      throw err;\n    }\n  };\n\n  // Reset the entire room\n  const resetRoom = async () => {\n    try {\n      const response = await fetch('/api/room', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          roomId,\n          action: 'resetRoom'\n        }),\n      });\n      \n      if (!response.ok) {\n        throw new Error('Failed to reset room');\n      }\n      \n      const result = await response.json();\n      \n      if (!result.success) {\n        throw new Error(result.error || 'Failed to reset room');\n      }\n      \n      setParticipants(result.participants);\n      setGroups(result.groups);\n      setIsGroupsFormed(result.isGroupsFormed);\n      setLastFetchTime(Date.now());\n    } catch (err) {\n      console.error('Error resetting room:', err);\n      setError('Failed to reset room');\n      throw err;\n    }\n  };\n\n  const value = {\n    roomId,\n    participants,\n    groups,\n    isGroupsFormed,\n    isLoading,\n    error,\n    addParticipant,\n    addParticipantManually,\n    removeParticipant,\n    formGroups: createGroups,\n    resetGroups,\n    resetRoom\n  };\n\n  return (\n    <RoomContext.Provider value={value}>\n      {children}\n    </RoomContext.Provider>\n  );\n}\n\nexport function useRoom() {\n  const context = useContext(RoomContext);\n  if (context === undefined) {\n    throw new Error('useRoom must be used within a RoomProvider');\n  }\n  return context;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 354, "column": 0}, "map": {"version":3,"sources":["file:///Users/justin/github2/sunday-group/node_modules/next/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":";AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAczC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1C,IAAIP,QAAQC,GAAG,CAACO,SAAS,eAAE;gBACzBL,OAAOC,OAAO,GAAGC,QAAQ;YAC3B,OAAO;;YAEP;QACF,OAAO;;QAMP;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 377, "column": 0}, "map": {"version":3,"sources":["file:///Users/justin/github2/sunday-group/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 384, "column": 0}, "map": {"version":3,"sources":["file:///Users/justin/github2/sunday-group/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored['react-ssr'].React\n"],"names":["module","exports","require","vendored","React"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CAAC,YAAY,CAACC,KAAK","ignoreList":[0],"debugId":null}}]
}